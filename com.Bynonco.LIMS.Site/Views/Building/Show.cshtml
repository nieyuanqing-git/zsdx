@using com.Bynonco.JqueryEasyUI.Core; 
@{
    Layout = "~/Views/Shared/_HomeSiteMapLayout.cshtml";
    ViewBag.Title = "楼宇地图";
    var orgXPath = ViewData["OrgXPath"] == null || ViewData["OrgXPath"] == "" ? "000" : ViewData["OrgXPath"].ToString();
}
@section ImportCssAndJs
{
<script type="text/javascript">
    var map;
    var tileUrl = "";
    var prevUrl = "";
    var nextUrl = "";
    var currUrl = "";
    var isFullScreen = false;

    function doBuildingTreeListLoadSuccess(){
        $('#tbBuildingTreeList').tree('expandAll');
		var node = $('#tbBuildingTreeList').tree('getRoot');
		var childnode = $('#tbBuildingTreeList').tree('getChildren',node.target);
        if(childnode.length > 0)
        {
            var curNode = childnode[0];
		    $('#tbBuildingTreeList').tree('expandTo', curNode.target).tree('select', curNode.target);
            doBuildingTreeListClick(curNode);
        }
    }
    function doBuildingTreeListClick(node) {
        if(node.id != null && !node.id.isDefaultGuid())
        {
            currUrl = '@Url.Action("GetBuildingSiteMap", "Building")' + '?id=' + encodeURI(node.id) + "&date=" + new Date().getMilliseconds();
            $.getJSON(currUrl, function (data) {
                initMap(data);
            });
        }
    }

    function initBuildingJson() {
        $.getJSON(currUrl, function (data) {
            initMap(data);
        });
    }

    //初始化地图
    function initMap(jsonData) {
        tileUrl = jsonData.TileUrl;
        currUrl = jsonData.CurrUrl;
        prevUrl = jsonData.UpUrl;
        nextUrl = jsonData.DownUrl;
        if (prevUrl != "")
		    $("#btnPrevBuilding").attr("disabled", false);
        else
		    $("#btnPrevBuilding").attr("disabled", true);
	    if (nextUrl != "") 
		    $("#btnNextBuilding").attr("disabled", false);
	    else
		    $("#btnNextBuilding").attr("disabled", true);

        var tileLayer = new BMap.TileLayer();
        tileLayer.getTilesUrl = function (tileCoord, zoom) {
            var x = tileCoord.x;
            var y = tileCoord.y;
            return tileUrl + zoom + "/" + x + "_" + y + ".png?date=" + new Date().getMilliseconds();
        }

        var MyMap = new BMap.MapType('MyMap', tileLayer, { minZoom: jsonData.MinZoom, maxZoom: jsonData.MaxZoom });
        map = new BMap.Map('map', { mapType: MyMap });
        map.addControl(new BMap.NavigationControl({ anchor: BMAP_ANCHOR_TOP_RIGHT, type: BMAP_NAVIGATION_CONTROL_SMALL }));
        map.centerAndZoom(new BMap.Point(0, 0), jsonData.CurZoom);
        map.enableScrollWheelZoom();
        map.enableKeyboard();

        initMenu();
        initMarker(jsonData.Marker);
    }

    //初始化中心点和缩放级别
    function initCenterAndZoom(center, zoom) {
        map.setCenter(center);
        map.setZoom(zoom);
    }

    //初始化标注
    function initMarker(markerList) {
        if (!markerList) return;
        for (var i = 0; i < markerList.length; i++) {
            var item = markerList[i];
            var p0 = item.Point.X;
            var p1 = item.Point.Y;
            var point = new BMap.Point(p0, p1);
            var iconImg = createIcon(item.MapIcon);
            var marker = new BMap.Marker(point, { icon: iconImg });
            var iw = createInfoWindow(item);
            var label = new BMap.Label(item.Content, { "offset": new BMap.Size(item.MapIcon.lb - item.MapIcon.x + 10, -15) });
            marker.setLabel(label);
            map.addOverlay(marker);
            label.setStyle({
                borderColor: "#808080",
                color: "#333",
                cursor: "pointer"
            });

            (function () {
                var _iw = createInfoWindow(item);
                var _marker = marker;
                _marker.addEventListener("click", function () { this.openInfoWindow(_iw); });
                _iw.addEventListener("open", function () { _marker.getLabel().hide(); })
                _iw.addEventListener("close", function () { _marker.getLabel().show(); })
                label.addEventListener("click", function () { _marker.openInfoWindow(_iw); })
                if (markerList.length == "") { label.hide(); _marker.openInfoWindow(_iw); }
            })()
        }
    }
    //创建一个Icon
    function createIcon(json) {
        var icon = new BMap.Icon(json.src, new BMap.Size(json.w, json.h), { imageOffset: new BMap.Size(-json.l, -json.t), infoWindowOffset: new BMap.Size(json.lb + 5, 1), offset: new BMap.Size(json.x, json.h) })
        return icon;
    }
    //创建InfoWindow
    function createInfoWindow(item) {
        var httpText = getEquipmentMapInfo(item);
        var iw = new BMap.InfoWindow(httpText, { enableMessage: false }); //{enableMessage: false}不显示发短信的手机
        return iw;
    }

    function getEquipmentMapInfo(item) {
        return "<table style='width:200px;'>"
            + "     <tr>"
            + "         <td rowspan = '3' style='width:70px;height:60px;vertical-align:middle'>"
            + "             <img align='middle' style='width:60px; height:60px' src='" + item.IconPath + "' />"
            + "         </td>"
            + "         <td colspan='2' style='font-size:13px; font-weight:bold; text-align:left'>" + item.Name + "</td>"
            + "     </tr>"
            + "     <tr>"
            + "         <th>资产编号:</th>"
            + "         <td>" + item.Label + "</td>"
            + "     </tr>"
            + "     <tr>"
            + "         <th>设备型号:</th>"
            + "         <td>" + item.Model + "</td>"
            + "     </tr>"
            + "     <tr>"
            + "         <th>所属机构:</th>"
            + "         <td colspan='3'>" + item.OrgName + "</td>"
            + "     </tr>"
            + "     <tr>"
            + "         <th>放置地点:</th>"
            + "         <td colspan='3'>" + item.RoomName + "</td>"
            + "     </tr>"
            + "     <tr>"
            + "         <td colspan='4' style='text-align:right;'><a href='@(Url.Action("Show", "Equipment"))" + "/" + item.EquipmentId + "' style='text-decoration:underline;'>点击查看详情</a></td>"
            + "     </tr>"
            + "</table>";
    }
    function doDeleteBuildingEquipment(id) {
        if (!id || id.trim() == "") {
            $.messager.show({ title: '提示', msg: '请选择要删除的项', showType: 'show' });
            return false;
        }
        $.messager.progress({ title: '提示', msg: '正在删除楼宇设备,请稍候……' });
        $.ajax({
            type: "POST",
            url: '@Url.Action("DeleteBuildingEquipment", "Building")' + "?date=" + new Date().getMilliseconds(),
            data: "id=" + id,
            success: function (msg) {
                $.messager.progress('close');
                if (msg && msg.indexOf("出错") != -1) {
                    $.messager.show({ title: '提示', msg: msg, showType: 'show' });
                    return false;
                }
                $.getJSON(currUrl, function (data) {
                    initMap(data);
                    $.messager.progress('close');
                });
            }
        });
        return false;
    }
    //初始化右键菜单
    function initMenu() {
        var contextMenu = new BMap.ContextMenu();
        var txtMenuItem = [{
            text: '添加设备',
            callback: function (p) {
                doAddBuildingEquipment(p.lng, p.lat);
            }
        }];
        for (var i = 0; i < txtMenuItem.length; i++) {
            contextMenu.addItem(new BMap.MenuItem(txtMenuItem[i].text, txtMenuItem[i].callback, 100));
            if (i == 1 || i == 3) {
                contextMenu.addSeparator();
            }
        }
        map.addContextMenu(contextMenu);
    }
    //添加标注
    function addMarker(point, txt, iconpng) {
        var myIcon = new BMap.Icon(iconpng, new BMap.Size(18, 23));
        var marker = new BMap.Marker(point, { icon: myIcon });
        var label = new BMap.Label(txt, { offset: new BMap.Size(0, -30) });
        marker.setLabel(label);
        map.addOverlay(marker);
    }
    //上楼
    function fnPrevUrl() {
        if (prevUrl != "") {
            $.getJSON(prevUrl + "?date=" + new Date().getMilliseconds(), function (data) {
                initMap(data);
            });
            var curNode = $('#tbBuildingTreeList').tree('find', prevUrl.substr(prevUrl.length-36));
		    $('#tbBuildingTreeList').tree('expandTo', curNode.target).tree('select', curNode.target);
        }
    }
    //下楼
    function fnNextUrl() {
        if (nextUrl != "") {
            $.getJSON(nextUrl + "?date=" + new Date().getMilliseconds() , function (data) {
                initMap(data);
            });
            var curNode = $('#tbBuildingTreeList').tree('find', nextUrl.substr(nextUrl.length-36));
		    $('#tbBuildingTreeList').tree('expandTo', curNode.target).tree('select', curNode.target);

        }
    }
    //放大
    function fnZoomIn() {
        map.zoomIn();
    }
    //缩小
    function fnZoomOut() {
        map.zoomOut();
    }
    //全屏
    function fnFullScreen() {
        var center = map.getCenter();
        var zoom = map.getZoom();
        if (isFullScreen) {
            $(".main-box-left").removeClass('hide');
            $(".main-box-right-l").css('width','750px');
            $(".main-box-right-l").css('padding','10px 0 0 30px');
            $("#btnFullScreen").val("全屏");
            isFullScreen = false;
        }
        else {
            $(".main-box-left").addClass('hide');
            $(".main-box-right-l").css('width','1003px');
            $(".main-box-right-l").css('padding','10px 0 0 0');
            $("#btnFullScreen").val("退出全屏");
            isFullScreen = true;
        }
        $.getJSON(currUrl, function (data) {
            initMap(data);
            initCenterAndZoom(center, zoom);
        });
    }
    </script>
}
@section MainLeft
{
<h2 class='title'>楼宇列表</h2>
<div style='padding-top:10px;'>
    @{
        var dataGrid = Html.JTree("tbBuildingTreeList")
            .SetUrl(Url.Action("GetBuildingTree", "Building"))
            .SetExpandAll(true)
            .SetOnClick("doBuildingTreeListClick(node);")
            .SetOnLoadSuccess("doBuildingTreeListLoadSuccess();");
       }
    @(dataGrid.ToMvcString())
</div>
}
@section MainRight
{
    <h2 class='title'>楼宇地图</h2>
    <div style='padding-top:10px;padding-bottom:10px;'>
        <input type="button" id="btnPrevBuilding" value="上楼" onclick="fnPrevUrl()" />
        <input type="button" id="btnNextBuilding" value="下楼" onclick="fnNextUrl()" />
        <input type="button" id="btnZoomIn" value="放大" onclick="fnZoomIn()" />
        <input type="button" id="btnZoomOut" value="缩小" onclick="fnZoomOut()" />
        <input type="button" id="btnFullScreen" value="全屏" onclick="fnFullScreen()" />
    </div>
    <div id="map" style='height:400px;'></div>
}
