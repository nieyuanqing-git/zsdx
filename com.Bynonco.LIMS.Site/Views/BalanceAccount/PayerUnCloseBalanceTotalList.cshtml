@using com.Bynonco.JqueryEasyUI.Core;
@{
    var isCostDeductOpenFund = ViewData["IsCostDeductOpenFund"] == null ? false : bool.Parse(ViewData["IsCostDeductOpenFund"].ToString());
    var balanceAccountPrivilige = com.Bynonco.LIMS.BLL.Business.Privilige.PriviligeFactory.GetBalanceAccountPrivilige(User.Identity.Name);
    var dataGrid = Html.JDataGrid("tbPayerUnCloseBalanceTotalList")
    .SetUrl(Url.Action("GetGridPayerUnCloseBalanceTotalList", "BalanceAccount"))
    .SetHeight(650)
    .SetPageSize(20)
    .SetMutiSelect(false)
    .SetSortName("PayerName")
    .SetSortOrder(SortOrder.desc)
    .SetShowPrintButton(false)
    .SetShowRefreshButton(false)
    .SetShowSearchButton(false);
    if (balanceAccountPrivilige.IsEnableViewUnCloseBalanceTotalDetail)
    {
        dataGrid.AddFrozenColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("查看明细", "ViewBalanceTotalDetailOperate").SetSortable(false).SetWidth(80).SetAlign(Align.center));
    }
    dataGrid.AddFrozenColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("编码", "PayerId").SetHidden(true))
    .AddFrozenColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("课题编码", "SubjectId").SetHidden(true))
    .AddFrozenColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("付费人", "PayerName").SetSortable(false).SetWidth(80).SetAlign(Align.center))
    .AddFrozenColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("课题组", "SubjectName").SetSortable(false).SetWidth(120).SetAlign(Align.left));
    if(isCostDeductOpenFund)
    {
        dataGrid.AddColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("普通费用<br />真实币", "CostRealFeeStr").SetSortable(false).SetWidth(100).SetAlign(Align.center))
        .AddColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("普通费用<br />虚拟币", "CostVirtualFeeStr").SetSortable(false).SetWidth(100).SetAlign(Align.center))
        .AddColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("开放基金费用<br />真实币", "CostOpenFundRealFeeStr").SetHidden(true).SetSortable(false).SetWidth(100).SetAlign(Align.center))
        .AddColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("开放基金费用<br />补贴币", "CostSubsidiesFeeStr").SetHidden(true).SetSortable(false).SetWidth(100).SetAlign(Align.center))
        .AddColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("开放基金费用<br />上半年总额", "CostFirstHalfFeeStr").SetSortable(false).SetWidth(100).SetAlign(Align.center))
        .AddColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("开放基金费用<br />下半年总额", "CostSecondHalfFeeStr").SetSortable(false).SetWidth(100).SetAlign(Align.center))
        .AddColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("总费用", "CostTotalFeeStr").SetSortable(false).SetWidth(100).SetAlign(Align.center));
    }
    else
    {
        dataGrid.AddColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("真实币费用", "CostRealFeeStr").SetSortable(false).SetWidth(100).SetAlign(Align.center))
        .AddColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("虚拟币费用", "CostVirtualFeeStr").SetSortable(false).SetWidth(100).SetAlign(Align.center))
        .AddColum(new com.Bynonco.JqueryEasyUI.Core.DataGridColumn("总费用", "CostTotalFeeStr").SetSortable(false).SetWidth(100).SetAlign(Align.center));
    }
    if (balanceAccountPrivilige.IsEnableSettle)
    {
        dataGrid.AddToolBarButton(new ToolBarButton() { Handler = "doSettle();", IconCls = "icon-yen-user", Id = "btnBalanceAccount", Text = "结算" }); 
    }
    if (balanceAccountPrivilige.IsEnableExportPayerUnCloseBalanceTotal)
    {
        dataGrid.AddToolBarButton(new ToolBarButton() { Disabled = false, Handler = "doExportPayerUnCloseBalanceTotal();", IconCls = "icon-excel", Id = "btnExportPayerUnCloseBalanceTotal", Text = "导出汇总" });
    }
    if (balanceAccountPrivilige.IsEnabelExportPayerUnCloseBalanceTotalDetail)
    {
        dataGrid.AddToolBarButton(new ToolBarButton() { Disabled = false, Handler = "doExportPayerUnCloseBalanceTotalDetail();", IconCls = "icon-excel", Id = "btnExportPayerUnCloseBalanceTotalDetail", Text = "导出明细" });
    }
}
@(dataGrid.ToMvcString()) 
<script type="text/javascript">
    function getBalanceTotalPagingContext() {
        var pageSize = $("#tbPayerUnCloseBalanceTotalList").datagrid("options").pageSize;
        var pageIndex = $("#tbPayerUnCloseBalanceTotalList").datagrid("options").pageNumber;
        var sortName = $("#tbPayerUnCloseBalanceTotalList").datagrid("options").sortName;
        var sortOrder = $("#tbPayerUnCloseBalanceTotalList").datagrid("options").sortOrder;
        return { "pageSize": pageSize, "pageIndex": pageIndex, "sortName": sortName, "sortOrder": sortOrder };
    }
</script>