@model com.Bynonco.LIMS.Model.UserType
@using com.Bynonco.JqueryEasyUI.Core; 
<div id="divUserTypeEdit">
 <form id="frmUserTypeEdit" action="#">
    @Html.Hidden("Id",Model == null ? "": Model.Id.ToString())
    <table id="tdUserTypeEdit" class="edit-table" style="width:385px;">
         <tr>
            <th>名称</th>
            <td>
                @Html.JValidateBox("Name").SetOnChange("doOnNameChanged();").SetValue(Model == null ? "" : Model.Name).SetWidth(200).ToMvcString()
                <span class="required">必填</span>
            </td>
        </tr>
        <tr>
            <th>助记符</th>
            <td>@Html.JValidateBox("InputStr").SetValue(Model == null ? "" : Model.InputStr).SetWidth(200).ToMvcString()</td>
        </tr>
        <tr>
            <th>XPath</th>
            <td>@Html.JValidateBox("XPath").SetValue(Model == null ? "" : Model.XPath).SetWidth(200).SetDisabled(true).ToMvcString()</td>
        </tr>
        <tr>
            <th>父用户类型</th>
            <td id="tdParentId">
                @(Html.JComboTree("ParentId")
                .SetData(ViewData["ParentJson"])
                .SetValue(Model == null || !Model.ParentId.HasValue ? "" : Model.ParentId.Value.ToString())
                .SetOnLoadSuccess("setTimeout('doOnParentLoadSuccess();', 500);")
                .SetOnChange("doOnParentUserTypeChange();")
                .SetMultiple(false)
                .SetDisabled(Model != null)
                .SetWidth(205).SetRequired(false).SetExpandAll(true).ToMvcString())
            </td>
        </tr>
        <tr id="trUserIdentity">
            <th>身份类型</th>
            <td id="tdUserIdentity">
                @(Html.JComboBox("UserIdentity")
                .SetEditable(false)
                .SetData(ViewData["UserIdentityJson"])
                .SetValue(Model == null || !Model.UserIdentity.HasValue ? "" : Model.UserIdentity.Value.ToString())
                .SetOnLoadSuccess("setTimeout('doOnUserIdentityLoadSuccess();', 500);")
                .SetWidth(205)
                .SetDisabled(Model != null && Model.ParentId.HasValue)
                .ToMvcString())
                <span class="required">必填</span>
            </td>
        </tr>
        <tr>
            <th>默认角色</th>
            <td id="tdWorkGroup">
                @(Html.JComboBox("WorkGroupId")
                .SetEditable(false)
                .SetData(ViewData["WorkGroupJson"])
                .SetValue(Model == null || !Model.UserIdentity.HasValue ? "" : Model.UserIdentity.Value.ToString())
                .SetOnLoadSuccess("setTimeout('doOnWorkGroupLoadSuccess();', 500);")
                .SetWidth(205)
                .ToMvcString())
            </td>
        </tr>
        <tr>
            <th>是否必须绑导师</th>
            <td>
                @Html.CheckBox("IsStudentNeedTutor", Model == null ? true : Model.IsStudentNeedTutor)
                <span class="required">（仅学生身份类型生效）</span>
            </td>
        </tr>
        <tr>
            <th>备注</th>
            <td>
                @Html.TextArea("Remark", Model == null ? "" : Model.Remark, new { style = "font-size:12px;text-decoration:none;height:60px;width:295px;margin-right:5px;" })
            </td>
        </tr>
    </table>
  </form>
</div> 
<script type="text/javascript">
    function doOnNameChanged(){
        $("#InputStr").val("");
    }
    function doOnParentLoadSuccess(){
        if($("#Id").val().trim()==""){
          var selectedUserType = $("#tbUserTypeList").treegrid("getSelected");
          if(selectedUserType && selectedUserType.Id && selectedUserType.Id.trim() != "" && !selectedUserType.Id.isDefaultGuid()) {
              var parentId = selectedUserType.Id;
              var parentName = selectedUserType.Name;
              $("#ParentId").combotree("setValue",parentId);
              $("#tdUserTypeEdit #tdParentId span input.combo-text.validatebox-text").val(parentName);  
              var urlGetUserTypeById = '@Url.Action("GetUserTypeById","UserType")';
              $.post(urlGetUserTypeById, { id: parentId }, function (data) {
                 if (data && data != "")
                 {
                    $("#UserIdentity").combobox("setValue", data.UserIdentity);
                 }
              }, 'json');
          }
        }
        else $("#tdUserTypeEdit #tdParentId span input.combo-text.validatebox-text").val("@ViewData["ParentName"].ToString()");     
    }
    function doOnUserIdentityLoadSuccess(){   
        $("#tdUserTypeEdit #tdUserIdentity span input.combo-text.validatebox-text").val("@ViewData["UserIdentityName"].ToString()");  
    }
    function doOnWorkGroupLoadSuccess(){
        $("#tdUserTypeEdit #tdWorkGroup span input.combo-text.validatebox-text").val("@ViewData["WorkGroupName"].ToString()");  
    }
    function doOnParentUserTypeChange()
    {
        $("#trUserIdentity").addClass("hide");
        var parentId = $("#ParentId").combotree("getValue");
        if(parentId == "" || parentId.isDefaultGuid())
        {
            $("#trUserIdentity").removeClass("hide");
            $("#UserIdentity").combobox("setValue", "");
        }
        else
        {
            var urlGetUserTypeById = '@Url.Action("GetUserTypeById","UserType")';
            $.post(urlGetUserTypeById, { id: parentId }, function (data) {
                if (data && data != "")
                {
                    $("#UserIdentity").combobox("setValue", data.UserIdentity);
                }
            }, 'json');
        }
    }
</script>